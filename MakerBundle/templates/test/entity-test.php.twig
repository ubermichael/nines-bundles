<?php

declare(strict_types=1);

namespace App\Tests\Entity;

use {{ entity_full_class_name }};
use DateTimeImmutable;
use PHPUnit\Framework\TestCase;

class {{ entity_class_name }}Test extends TestCase {
    private ?{{ entity_class_name }} ${{ entity_var_singular }} = null;

    public function testSetUp() : void {
        $this->assertInstanceOf({{ entity_class_name }}::class, $this->{{ entity_var_singular }});
    }

    {% for field in mapped_field_names %}
        {% set mapping = field_mappings[field] %}
        {% set label = mapping['columnName']|replace({'_': ' '})|title|replace({' ': ''}) -%}
        public function test{{ label }}() : void {
        {% if mapping.type in ['date', 'datetime_immutable', 'date_immutable'] %}
            $this->assertSame($this->{{ entity_var_singular }}, $this->{{ entity_var_singular }}->set{{ label }}(new DateTimeImmutable('2020-02-02')));
            $this->assertSame('2020-02-02', $this->{{ entity_var_singular }}->get{{ label }}()->format('Y-m-d'));
        {% elseif mapping.type in ['array'] %}
            $this->assertSame($this->{{ entity_var_singular }}, $this->{{ entity_var_singular }}->set{{ label }}(['Updated 1', 'Updated 2']));
            $this->assertSame(['Updated 1', 'Updated 2'], $this->{{ entity_var_singular }}->get{{ label }}());
        {% elseif mapping.type in ['boolean'] %}
            $this->assertSame($this->{{ entity_var_singular }}, $this->{{ entity_var_singular }}->set{{ label }}(true));
            $this->assertTrue($this->{{ entity_var_singular }}->get{{ label }}());
        {% elseif mapping.type in ['smallint', 'integer', 'bigint'] %}
            $this->assertSame($this->{{ entity_var_singular }}, $this->{{ entity_var_singular }}->set{{ label }}(1256));
            $this->assertSame(1256, $this->{{ entity_var_singular }}->get{{ label }}());
        {% elseif mapping.type in ['decimal', 'float'] %}
            $this->assertSame($this->{{ entity_var_singular }}, $this->{{ entity_var_singular }}->set{{ label }}(12.501));
            $this->assertEqualsWithDelta(12.501, $this->{{ entity_var_singular }}->get{{ label }}(), 0.0001);
        {% elseif mapping.type in ['text'] %}
            $this->assertSame($this->{{ entity_var_singular }}, $this->{{ entity_var_singular }}->set{{ label }}('<p>New {{ label }}</p>'));
            $this->assertSame('<p>New {{ label }}</p>', $this->{{ entity_var_singular }}->get{{ label }}());
        {% else %}
            $this->assertSame($this->{{ entity_var_singular }}, $this->{{ entity_var_singular }}->set{{ label }}('New {{ label }}'));
            $this->assertSame('New {{ label }}', $this->{{ entity_var_singular }}->get{{ label }}());
        {% endif %}
        }
    {% endfor %}

    protected function setUp() : void {
        parent::setUp();
        $this->{{ entity_var_singular }} = new {{ entity_class_name }}();
    }
}
