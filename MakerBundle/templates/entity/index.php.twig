<?php

declare(strict_types=1);

namespace App\Index;

use Nines\SolrBundle\Exception\NotConfiguredException;
use Nines\SolrBundle\Index\AbstractIndex;
use Solarium\QueryType\Select\Query\Query;

class {{ index_class_name }} extends AbstractIndex {

    /**
    * @param ?array<string,array<string>> $filters
    * @param ?array<string,array<string>> $rangeFilters
    * @param ?array<string,string> $order
    *
    * @throws NotConfiguredException
    */
    public function searchQuery(string $q, ?array $filters = [], ?array $rangeFilters = [], ?array $order = []) : Query {
        $qb = $this->createQueryBuilder();
        $qb->addFilter('type', ['{{ entity_class_name }}']);
        $qb->setDefaultField('content');

        foreach ($filters as $key => $values) {
            $qb->addFilter($key, $values);
        }

        foreach ($rangeFilters as $key => $values) {
            foreach ($values as $v) {
                [$start, $end] = explode(' ', $v);
                $qb->addFilterRange($key, $start, $end);
            }
        }

        // $qb->addFacetField(NAME);
        // $qb->addFacetRange(NAME, START, END, GAP);
        // $qb->setHighlightFields([NAME, NAME, NAME]);

        if ($order) {
            $qb->setSorting($order);
        }

        return $qb->getQuery();
    }
}
