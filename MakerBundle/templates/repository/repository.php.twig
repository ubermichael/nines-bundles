<?php

namespace {{ repository_class_ns }};

use {{ entity_class_name }};
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\Query;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @extends ServiceEntityRepository<{{ entity_class_shortName }}>
 *
 * @method {{ entity_class_shortName }}|null find($id, $lockMode = null, $lockVersion = null)
 * @method {{ entity_class_shortName }}|null findOneBy(array $criteria, array $orderBy = null)
 * @method {{ entity_class_shortName }}[]    findAll()
 * @method {{ entity_class_shortName }}[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class {{ repository_class_shortName }} extends ServiceEntityRepository {
    public function __construct(ManagerRegistry $registry) {
        parent::__construct($registry, {{ entity_class_shortName }}::class);
    }

    public function indexQuery() : Query {
        $qb = $this->createQueryBuilder('{{ entity_var_single }}');
        $qb->addOrderBy('{{ entity_var_single }}.id', 'ASC');
        return $qb->getQuery();
    }

    public function save({{ entity_class_shortName }} $entity, bool $flush = false) : void {
        $this->getEntityManager()->persist($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }

    public function remove({{ entity_class_shortName }} $entity, bool $flush = false) : void {
        $this->getEntityManager()->remove($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }

    public function flush() : void {
        $this->getEntityManager()->flush();
    }
}
