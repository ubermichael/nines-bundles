<?php

declare(strict_types=1);

/*
 * (c) 2022 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace Nines\SolrBundle\Tests\Client;

use Nines\SolrBundle\Client\ClientFactory;
use Nines\UtilBundle\TestCase\ServiceTestCase;
use Solarium\Client;

class ClientFactoryTest extends ServiceTestCase {
    private ?ClientFactory $factory = null;

    public function testSetup() : void {
        $this->assertInstanceOf(ClientFactory::class, $this->factory);
    }

    public function testBuild() : void {
        $client = $this->factory->build();
        $this->assertInstanceOf(Client::class, $client);
    }

    public function testBuildDisabled() : void {
        $this->factory->setEnabled(false);
        $client = $this->factory->build();
        $this->assertNull($client);
        $this->factory->setEnabled(true);
    }

    public function testBuildSingleton() : void {
        $client1 = $this->factory->build();
        $client2 = $this->factory->build();
        $this->assertSame($client1, $client2);
    }

    public function testConfig() : void {
        $expected = [
            'endpoint' => [
                'host' => [
                    'host' => 'localhost',
                    'port' => 8983,
                    'path' => '/',
                    'core' => 'nines_demo_test',
                ],
            ],
        ];
        $client = $this->factory->build();
        $config = $this->factory->getConfig();
        $this->assertSame($config, $expected);
    }

    protected function setUp() : void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->factory = self::$container->get(ClientFactory::class);
        $this->factory->reset();
    }
}
